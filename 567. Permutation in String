#include <vector>
#include <string>

class Solution {
public:
    bool checkInclusion(std::string s1, std::string s2) {
        int n = s1.length();
        int m = s2.length();
        if (m < n) return false;

        // Frequency array for s1
        std::vector<int> map1(26, 0);
        for (int i = 0; i < n; ++i) {
            map1[s1[i] - 'a']++;
        }

        // Sliding window through s2
        for (int i = 0; i <= m - n; ++i) {
            std::vector<int> map2(26, 0);
            for (int j = 0; j < n; ++j) {
                map2[s2[i + j] - 'a']++;
            }
            if (isMatched(map1, map2)) {
                return true;
            }
        }

        return false;
    }

private:
    bool isMatched(const std::vector<int>& map1, const std::vector<int>& map2) {
        for (int i = 0; i < 26; ++i) {
            if (map1[i] != map2[i]) return false;
        }
        return true;
    }
};
