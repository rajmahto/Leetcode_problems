/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* insertGreatestCommonDivisors(ListNode* head) {
        if(head->next == NULL) return head;
        ListNode* cur = head;
        while(cur->next != NULL){
            int mini = min(cur->val,cur->next->val);
            int maxi = max(cur->val,cur->next->val);
            int gcd = FindGCD(maxi,mini);
            ListNode* gcdNode = new ListNode(gcd);
            gcdNode->next = cur->next;
            cur->next = gcdNode;
            cur = gcdNode->next;
        }
        return head;
    }
    private:
    int FindGCD(int a, int b){
        if(b == 0) return a;
        return FindGCD(b, a % b);
    }
};
